================================================================================
CIP2018-10-29 - Proposal
================================================================================

// https://github.com/opencypher/openCypher/blob/7f6cfeb1c724750a96afdc95c1903ed492b0335b/cip/1.accepted/CIP2018-10-29-EXISTS-and-IS-NOT-NULL.adoc

--------------------------------------------------------------------------------

(ERROR
  (comment))

================================================================================
CIP2018-10-29 - NullPredicateExpression
================================================================================

// Name changes to: StringListNullOperatorExpression and NullOperatorExpression.
RETURN 1 IS NOT NULL;

--------------------------------------------------------------------------------

(cypher
  (comment)
  (statement
    (query
      (regular_query
        (single_query
          (single_part_query
            (return
              (projection_body
                (projection_items
                  (projection_item
                    (expression
                      (string_list_null_predicate_expression
                        (expression
                          (atom
                            (literal
                              (number_literal
                                (integer_literal
                                  (decimal_integer))))))
                        (null_predicate_expression)))))))))))))

================================================================================
CIP2018-10-29 - PatternPredicate
================================================================================

// Added PatternPredicate(RelationshipsPattern) instead of RelationshipsPattern in an Atom.
RETURN (a)-->()

--------------------------------------------------------------------------------

(cypher
  (comment)
  (statement
    (query
      (regular_query
        (single_query
          (single_part_query
            (return
              (projection_body
                (projection_items
                  (projection_item
                    (expression
                      (atom
                        (pattern_predicate
                          (relationships_pattern
                            (node_pattern
                              (variable
                                (symbolic_name
                                  (unescaped_symbolic_name))))
                            (pattern_element_chain
                              (relationship_pattern
                                (dash)
                                (dash)
                                (right_arrow_head))
                              (node_pattern))))))))))))))))

================================================================================
CIP2018-10-29 - PatternPredicate 2A
================================================================================

MATCH (actor:Actor) WHERE (actor)-[:WON]->(:Award)
RETURN actor

--------------------------------------------------------------------------------

(cypher
  (statement
    (query
      (regular_query
        (single_query
          (single_part_query
            (reading_clause
              (match
                (pattern
                  (pattern_part
                    (anonymous_pattern_part
                      (pattern_element
                        (node_pattern
                          (variable
                            (symbolic_name
                              (unescaped_symbolic_name)))
                          (node_labels
                            (node_label
                              (label_name
                                (schema_name
                                  (symbolic_name
                                    (unescaped_symbolic_name)))))))))))
                (where
                  (expression
                    (atom
                      (pattern_predicate
                        (relationships_pattern
                          (node_pattern
                            (variable
                              (symbolic_name
                                (unescaped_symbolic_name))))
                          (pattern_element_chain
                            (relationship_pattern
                              (dash)
                              (relationship_detail
                                (relationship_types
                                  (rel_type_name
                                    (schema_name
                                      (symbolic_name
                                        (unescaped_symbolic_name))))))
                              (dash)
                              (right_arrow_head))
                            (node_pattern
                              (node_labels
                                (node_label
                                  (label_name
                                    (schema_name
                                      (symbolic_name
                                        (unescaped_symbolic_name)))))))))))))))
            (return
              (projection_body
                (projection_items
                  (projection_item
                    (expression
                      (atom
                        (variable
                          (symbolic_name
                            (unescaped_symbolic_name)))))))))))))))

================================================================================
CIP2018-10-29 - PatternPredicate 2B
================================================================================

MATCH (actor:Actor)
RETURN actor,
  CASE
    WHEN (actor)-[:WON]->(:Oscar) THEN 'Oscar winner'
    WHEN (actor)-[:WON]->(:GoldenGlobe) THEN 'Golden Globe winner'
    ELSE 'None'
  END AS accolade

--------------------------------------------------------------------------------

(cypher
  (statement
    (query
      (regular_query
        (single_query
          (single_part_query
            (reading_clause
              (match
                (pattern
                  (pattern_part
                    (anonymous_pattern_part
                      (pattern_element
                        (node_pattern
                          (variable
                            (symbolic_name
                              (unescaped_symbolic_name)))
                          (node_labels
                            (node_label
                              (label_name
                                (schema_name
                                  (symbolic_name
                                    (unescaped_symbolic_name)))))))))))))
            (return
              (projection_body
                (projection_items
                  (projection_item
                    (expression
                      (atom
                        (variable
                          (symbolic_name
                            (unescaped_symbolic_name))))))
                  (projection_item
                    (expression
                      (atom
                        (case_expression
                          (case_alternatives
                            (expression
                              (atom
                                (pattern_predicate
                                  (relationships_pattern
                                    (node_pattern
                                      (variable
                                        (symbolic_name
                                          (unescaped_symbolic_name))))
                                    (pattern_element_chain
                                      (relationship_pattern
                                        (dash)
                                        (relationship_detail
                                          (relationship_types
                                            (rel_type_name
                                              (schema_name
                                                (symbolic_name
                                                  (unescaped_symbolic_name))))))
                                        (dash)
                                        (right_arrow_head))
                                      (node_pattern
                                        (node_labels
                                          (node_label
                                            (label_name
                                              (schema_name
                                                (symbolic_name
                                                  (unescaped_symbolic_name))))))))))))
                            (expression
                              (atom
                                (literal
                                  (string_literal)))))
                          (case_alternatives
                            (expression
                              (atom
                                (pattern_predicate
                                  (relationships_pattern
                                    (node_pattern
                                      (variable
                                        (symbolic_name
                                          (unescaped_symbolic_name))))
                                    (pattern_element_chain
                                      (relationship_pattern
                                        (dash)
                                        (relationship_detail
                                          (relationship_types
                                            (rel_type_name
                                              (schema_name
                                                (symbolic_name
                                                  (unescaped_symbolic_name))))))
                                        (dash)
                                        (right_arrow_head))
                                      (node_pattern
                                        (node_labels
                                          (node_label
                                            (label_name
                                              (schema_name
                                                (symbolic_name
                                                  (unescaped_symbolic_name))))))))))))
                            (expression
                              (atom
                                (literal
                                  (string_literal)))))
                          (expression
                            (atom
                              (literal
                                (string_literal)))))))
                    (variable
                      (symbolic_name
                        (unescaped_symbolic_name)))))))))))))

================================================================================
CIP2018-10-29 - PatternPredicate 2C
================================================================================

MATCH (movie:Movie)<-[:ACTED_IN]-(actor:Actor)
WITH movie, collect(actor) AS cast
WHERE ANY(actor IN cast WHERE (actor)-[:WON]->(:Award))
RETURN movie

--------------------------------------------------------------------------------

(cypher
  (statement
    (query
      (regular_query
        (single_query
          (multi_part_query
            (reading_clause
              (match
                (pattern
                  (pattern_part
                    (anonymous_pattern_part
                      (pattern_element
                        (node_pattern
                          (variable
                            (symbolic_name
                              (unescaped_symbolic_name)))
                          (node_labels
                            (node_label
                              (label_name
                                (schema_name
                                  (symbolic_name
                                    (unescaped_symbolic_name)))))))
                        (pattern_element_chain
                          (relationship_pattern
                            (left_arrow_head)
                            (dash)
                            (relationship_detail
                              (relationship_types
                                (rel_type_name
                                  (schema_name
                                    (symbolic_name
                                      (unescaped_symbolic_name))))))
                            (dash))
                          (node_pattern
                            (variable
                              (symbolic_name
                                (unescaped_symbolic_name)))
                            (node_labels
                              (node_label
                                (label_name
                                  (schema_name
                                    (symbolic_name
                                      (unescaped_symbolic_name))))))))))))))
            (with
              (projection_body
                (projection_items
                  (projection_item
                    (expression
                      (atom
                        (variable
                          (symbolic_name
                            (unescaped_symbolic_name))))))
                  (projection_item
                    (expression
                      (atom
                        (function_invocation
                          (function_name
                            (symbolic_name
                              (unescaped_symbolic_name)))
                          (expression
                            (atom
                              (variable
                                (symbolic_name
                                  (unescaped_symbolic_name))))))))
                    (variable
                      (symbolic_name
                        (unescaped_symbolic_name))))))
              (where
                (expression
                  (atom
                    (quantifier
                      (filter_expression
                        (id_in_coll
                          (variable
                            (symbolic_name
                              (unescaped_symbolic_name)))
                          (expression
                            (atom
                              (variable
                                (symbolic_name
                                  (unescaped_symbolic_name))))))
                        (where
                          (expression
                            (atom
                              (pattern_predicate
                                (relationships_pattern
                                  (node_pattern
                                    (variable
                                      (symbolic_name
                                        (unescaped_symbolic_name))))
                                  (pattern_element_chain
                                    (relationship_pattern
                                      (dash)
                                      (relationship_detail
                                        (relationship_types
                                          (rel_type_name
                                            (schema_name
                                              (symbolic_name
                                                (unescaped_symbolic_name))))))
                                      (dash)
                                      (right_arrow_head))
                                    (node_pattern
                                      (node_labels
                                        (node_label
                                          (label_name
                                            (schema_name
                                              (symbolic_name
                                                (unescaped_symbolic_name)))))))))))))))))))
            (single_part_query
              (return
                (projection_body
                  (projection_items
                    (projection_item
                      (expression
                        (atom
                          (variable
                            (symbolic_name
                              (unescaped_symbolic_name))))))))))))))))

================================================================================
CIP2018-10-29 - ExistentialSubquery 3A
================================================================================

MATCH (actor:Actor)
WHERE EXISTS {
  (other:Actor)-[:ACTED_IN]->(movie)<-[:ACTED_IN]-(actor)
  WHERE other.name = actor.name
}
RETURN actor

--------------------------------------------------------------------------------

(cypher
  (statement
    (query
      (regular_query
        (single_query
          (single_part_query
            (reading_clause
              (match
                (pattern
                  (pattern_part
                    (anonymous_pattern_part
                      (pattern_element
                        (node_pattern
                          (variable
                            (symbolic_name
                              (unescaped_symbolic_name)))
                          (node_labels
                            (node_label
                              (label_name
                                (schema_name
                                  (symbolic_name
                                    (unescaped_symbolic_name)))))))))))
                (where
                  (expression
                    (atom
                      (existential_subquery
                        (pattern
                          (pattern_part
                            (anonymous_pattern_part
                              (pattern_element
                                (node_pattern
                                  (variable
                                    (symbolic_name
                                      (unescaped_symbolic_name)))
                                  (node_labels
                                    (node_label
                                      (label_name
                                        (schema_name
                                          (symbolic_name
                                            (unescaped_symbolic_name)))))))
                                (pattern_element_chain
                                  (relationship_pattern
                                    (dash)
                                    (relationship_detail
                                      (relationship_types
                                        (rel_type_name
                                          (schema_name
                                            (symbolic_name
                                              (unescaped_symbolic_name))))))
                                    (dash)
                                    (right_arrow_head))
                                  (node_pattern
                                    (variable
                                      (symbolic_name
                                        (unescaped_symbolic_name)))))
                                (pattern_element_chain
                                  (relationship_pattern
                                    (left_arrow_head)
                                    (dash)
                                    (relationship_detail
                                      (relationship_types
                                        (rel_type_name
                                          (schema_name
                                            (symbolic_name
                                              (unescaped_symbolic_name))))))
                                    (dash))
                                  (node_pattern
                                    (variable
                                      (symbolic_name
                                        (unescaped_symbolic_name)))))))))
                        (where
                          (expression
                            (comparison_expression
                              (expression
                                (property_or_labels_expression
                                  (expression
                                    (atom
                                      (variable
                                        (symbolic_name
                                          (unescaped_symbolic_name)))))
                                  (property_lookup
                                    (property_key_name
                                      (schema_name
                                        (symbolic_name
                                          (unescaped_symbolic_name)))))))
                              (expression
                                (property_or_labels_expression
                                  (expression
                                    (atom
                                      (variable
                                        (symbolic_name
                                          (unescaped_symbolic_name)))))
                                  (property_lookup
                                    (property_key_name
                                      (schema_name
                                        (symbolic_name
                                          (unescaped_symbolic_name))))))))))))))))
            (return
              (projection_body
                (projection_items
                  (projection_item
                    (expression
                      (atom
                        (variable
                          (symbolic_name
                            (unescaped_symbolic_name)))))))))))))))

================================================================================
CIP2018-10-29 - ExistentialSubquery 3B
================================================================================

MATCH (actor:Actor)
WHERE EXISTS {
  MATCH (other:Actor)-[:ACTED_IN]->(movie)<-[:ACTED_IN]-(actor)
  WHERE other.name = actor.name
  WITH other, count(*) as c
  WHERE c > 1
  RETURN true
}
RETURN actor

--------------------------------------------------------------------------------

(cypher
  (statement
    (query
      (regular_query
        (single_query
          (single_part_query
            (reading_clause
              (match
                (pattern
                  (pattern_part
                    (anonymous_pattern_part
                      (pattern_element
                        (node_pattern
                          (variable
                            (symbolic_name
                              (unescaped_symbolic_name)))
                          (node_labels
                            (node_label
                              (label_name
                                (schema_name
                                  (symbolic_name
                                    (unescaped_symbolic_name)))))))))))
                (where
                  (expression
                    (atom
                      (existential_subquery
                        (regular_query
                          (single_query
                            (multi_part_query
                              (reading_clause
                                (match
                                  (pattern
                                    (pattern_part
                                      (anonymous_pattern_part
                                        (pattern_element
                                          (node_pattern
                                            (variable
                                              (symbolic_name
                                                (unescaped_symbolic_name)))
                                            (node_labels
                                              (node_label
                                                (label_name
                                                  (schema_name
                                                    (symbolic_name
                                                      (unescaped_symbolic_name)))))))
                                          (pattern_element_chain
                                            (relationship_pattern
                                              (dash)
                                              (relationship_detail
                                                (relationship_types
                                                  (rel_type_name
                                                    (schema_name
                                                      (symbolic_name
                                                        (unescaped_symbolic_name))))))
                                              (dash)
                                              (right_arrow_head))
                                            (node_pattern
                                              (variable
                                                (symbolic_name
                                                  (unescaped_symbolic_name)))))
                                          (pattern_element_chain
                                            (relationship_pattern
                                              (left_arrow_head)
                                              (dash)
                                              (relationship_detail
                                                (relationship_types
                                                  (rel_type_name
                                                    (schema_name
                                                      (symbolic_name
                                                        (unescaped_symbolic_name))))))
                                              (dash))
                                            (node_pattern
                                              (variable
                                                (symbolic_name
                                                  (unescaped_symbolic_name)))))))))
                                  (where
                                    (expression
                                      (comparison_expression
                                        (expression
                                          (property_or_labels_expression
                                            (expression
                                              (atom
                                                (variable
                                                  (symbolic_name
                                                    (unescaped_symbolic_name)))))
                                            (property_lookup
                                              (property_key_name
                                                (schema_name
                                                  (symbolic_name
                                                    (unescaped_symbolic_name)))))))
                                        (expression
                                          (property_or_labels_expression
                                            (expression
                                              (atom
                                                (variable
                                                  (symbolic_name
                                                    (unescaped_symbolic_name)))))
                                            (property_lookup
                                              (property_key_name
                                                (schema_name
                                                  (symbolic_name
                                                    (unescaped_symbolic_name))))))))))))
                              (with
                                (projection_body
                                  (projection_items
                                    (projection_item
                                      (expression
                                        (atom
                                          (variable
                                            (symbolic_name
                                              (unescaped_symbolic_name))))))
                                    (projection_item
                                      (expression
                                        (atom))
                                      (variable
                                        (symbolic_name
                                          (unescaped_symbolic_name))))))
                                (where
                                  (expression
                                    (comparison_expression
                                      (expression
                                        (atom
                                          (variable
                                            (symbolic_name
                                              (unescaped_symbolic_name)))))
                                      (expression
                                        (atom
                                          (literal
                                            (number_literal
                                              (integer_literal
                                                (decimal_integer))))))))))
                              (single_part_query
                                (return
                                  (projection_body
                                    (projection_items
                                      (projection_item
                                        (expression
                                          (atom
                                            (literal
                                              (boolean_literal))))))))))))))))))
            (return
              (projection_body
                (projection_items
                  (projection_item
                    (expression
                      (atom
                        (variable
                          (symbolic_name
                            (unescaped_symbolic_name)))))))))))))))
